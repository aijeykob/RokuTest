{"version":3,"sources":["components/FirstPage.js","actions/index.js","components/SecondPage.js","App.js","reducers/index.js","storeConfig.js","index.js"],"names":["previousAccount","changePageToggle","status","type","payload","FirstPage","handleKeyPress","e","start","parentNode","id","keyCode","sibling","previousElementSibling","changeFocus","nextElementSibling","props","deleteAccount","getAttribute","document","getElementById","focus","style","backgroundColor","color","focusFirstAccount","addEventListener","this","removeEventListener","className","accounts","map","el","i","name","title","key","ref","input","src","img","alt","width","height","React","Component","FirstPageWithRedux","connect","state","pageToggle","dispatch","SecondPage","blur","previousBtn","previous","setPreviousBtn","newAccount","accountTitle","addAccount","writingAccountTitle","WritingAccountTitle","target","value","focusInput","autoComplete","onChange","placeholder","SecondPageWithRedux","account","btn","setAccounts","data","useEffect","initState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","filter","item","ReactDOM","render"],"mappings":"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","file":"static/js/main.d9b79aa1.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {changePageToggle, deleteAccount} from '../actions/index'\n\nlet previousAccount;\n\nclass FirstPage extends React.Component {\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPress);\n\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.handleKeyPress);\n    }\n\n    handleKeyPress = (e) => {\n        if (this.start.parentNode.id === 'first-page__accounts') {\n            if (e.keyCode === 38) {\n                // up arrow\n                let sibling = this.start.previousElementSibling;\n                this.changeFocus(sibling);\n            } else if (e.keyCode === 40) {\n                // down arrow\n                let sibling = this.start.nextElementSibling;\n                this.changeFocus(sibling);\n\n            } else if (e.keyCode === 37) {\n                // left arrow\n                this.props.deleteAccount(this.start.getAttribute('name'))\n            } else if (e.keyCode === 39) {\n                // right arrow\n                previousAccount = this.start;\n                let sibling = document.getElementById('first-page_btn-btn');\n                this.changeFocus(sibling);\n            }\n        } else if (this.start.parentNode.id === 'first-page__btn') {\n            if (e.keyCode === 37) {\n                // left arrow\n                let sibling = previousAccount;\n                this.changeFocus(sibling);\n            } else if (e.keyCode === 13) {\n                // enter arrow\n                this.props.changePageToggle(true);\n            }\n        } else if (this.start.parentNode.id === 'second-page__input') {\n            if (e.keyCode === 40) {\n                // down arrow\n                let sibling = document.getElementById('second-page__btn-add');\n                this.changeFocus(sibling);\n            }\n        }\n    };\n    changeFocus = (sibling) => {\n        if (sibling != null) {\n            this.start.focus();\n            this.start.style.backgroundColor = '';\n            this.start.style.color = '';\n            sibling.focus();\n            sibling.style.backgroundColor = 'cadetblue';\n            sibling.style.color = 'white';\n            this.start = sibling;\n        }\n    };\n    focusFirstAccount = () => {\n        if (this.start) {\n            this.start.focus();\n            this.start.style.backgroundColor = 'cadetblue';\n            this.start.style.color = 'white';\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"first-page\" id='first-page'>\n                <div className=\"container\">\n                    <div className=\"first-page__row\">\n                        <div id='first-page__accounts' className=\"first-page__accounts\">\n                            {\n                                this.props.accounts.map((el, i) => {\n                                    if (i === 0) {\n                                        return (\n                                            <div className='first-page__item'\n                                                 name={el.title}\n                                                 id='start'\n                                                 key={el.title}\n                                                 ref={(input) => {\n                                                     this.start = input;\n                                                     this.focusFirstAccount();\n                                                 }}\n                                            >\n                                                <img src={`../${el.img}`} alt='' width='40px' height='40px'/>\n                                                <p>{el.title}</p>\n\n                                            </div>\n                                        )\n                                    } else {\n                                        return (\n                                            <div className='first-page__item' name={el.title} key={el.title}>\n                                                <img src={`../${el.img}`} alt='' width='40px' height='40px'/>\n                                                <p>{el.title}</p>\n                                            </div>\n                                        )\n                                    }\n                                })\n                            }\n                        </div>\n                        <div className=\"first-page__btn\" id='first-page__btn'>\n                            <div className='first-page_btn-btn btn' id='first-page_btn-btn'>Add</div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    pageToggle: state.pageToggle,\n    accounts: state.accounts\n});\n\n\nconst mapDispatchToProps = dispatch => ({\n    changePageToggle: (status) => dispatch(changePageToggle(status)),\n    deleteAccount: (name) => dispatch(deleteAccount(name)),\n});\n\nconst FirstPageWithRedux = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FirstPage);\n\nexport {FirstPageWithRedux as FirstPage}","export const CHANGE_PAGE_TOGGLE = \"CHANGE_PAGE_TOGGLE\";\nexport const SET_ACCOUNTS = \"SET_ACCOUNTS\";\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\nexport const WRITING_ACCOUNT_TITLE = \"WRITING_ACCOUNT_TITLE\";\nexport const ADD_ACCOUNT = \"ADD_ACCOUNT\";\nexport const SET_PREVIOUS_BTN = \"SET_PREVIOUS_BTN\";\n\nexport const changePageToggle = (status) => ({\n    type: CHANGE_PAGE_TOGGLE, payload: status\n});\n\nexport const setAccounts = (data) => ({\n    type: SET_ACCOUNTS, payload: data\n});\nexport const deleteAccount = (name) => ({\n    type: DELETE_ACCOUNT, payload: name\n});\nexport const writingAccountTitle = (text) => ({\n    type: WRITING_ACCOUNT_TITLE, payload: text\n});\nexport const addAccount = (account) => ({\n    type: ADD_ACCOUNT, payload: account\n});\nexport const setPreviousBtn = (btn) => ({\n    type: SET_PREVIOUS_BTN, payload: btn\n});\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {addAccount, changePageToggle, setPreviousBtn, writingAccountTitle} from '../actions/index'\n\nclass SecondPage extends React.Component {\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.handleKeyPress);\n    }\n\n    handleKeyPress = (e) => {\n        if (this.start.parentNode.id === 'second-page__input') {\n            if (e.keyCode === 40) {\n                // down arrow\n                this.start.blur();\n                let sibling = document.getElementById(this.props.previousBtn);\n                this.changeFocus(sibling);\n            }\n        } else if (this.start.parentNode.id === 'second-page__btn-group') {\n            if (e.keyCode === 39) {\n                // right arrow\n                let sibling = this.start.nextElementSibling;\n                this.changeFocus(sibling);\n            } else if (e.keyCode === 37) {\n                // left arrow\n                let sibling = this.start.previousElementSibling;\n                this.changeFocus(sibling);\n            } else if (e.keyCode === 38) {\n                // up arrow\n                let previous = this.start.id;\n                let sibling = document.getElementById('second-page__input-input');\n                this.changeFocus(sibling);\n                this.props.setPreviousBtn(previous)\n            } else if (e.keyCode === 13) {\n                // enter arrow\n                if (this.start.id === 'second-page__btn-add') {\n                    let newAccount = {\n                        title: this.props.accountTitle,\n                        img: \"avatar.png\"\n                    };\n                    this.props.addAccount(newAccount)\n                }\n                this.props.changePageToggle(false);\n                this.props.writingAccountTitle('')\n            }\n        }\n    };\n    changeFocus = (sibling) => {\n        if (sibling != null) {\n            this.start.style.backgroundColor = '';\n            this.start.style.color = '';\n            this.start = sibling;\n            sibling.focus();\n            sibling.style.backgroundColor = 'cadetblue';\n            sibling.style.color = 'white';\n        }\n\n    };\n    WritingAccountTitle = (e) => {\n        this.props.writingAccountTitle(e.target.value)\n    };\n    focusInput = () => {\n        if (this.start) {\n            this.start.focus();\n            this.start.style.backgroundColor = 'cadetblue';\n            this.start.style.color = 'white';\n        }\n    };\n\n\n    render() {\n        return (\n            <div id='second-page' className=\"second-page\">\n                <div className=\"container\">\n                    <div className=\"second-page__row\">\n                        <div className=\"second-page__input\" id='second-page__input'>\n                            <input\n                                ref={(input) => {\n                                    this.start = input;\n                                    this.focusInput();\n                                }}\n                                autoComplete=\"off\"\n                                type=\"text\"\n                                value={this.props.accountTitle}\n                                onChange={(e) => this.WritingAccountTitle(e)}\n                                placeholder=\"enter account name\"\n                                id='second-page__input-input'/>\n                        </div>\n                        <div className='second-page__btn-group' id='second-page__btn-group'>\n                            <div className=\"second-page__btn-add btn\" id='second-page__btn-add'>Add</div>\n                            <div className=\"second-page__btn-cancel btn\" id='second-page__btn-cancel'>Cancel</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    pageToggle: state.pageToggle,\n    accountTitle: state.accountTitle,\n    previousBtn: state.previousBtn,\n});\n\n\nconst mapDispatchToProps = dispatch => ({\n    changePageToggle: (status) => dispatch(changePageToggle(status)),\n    writingAccountTitle: (status) => dispatch(writingAccountTitle(status)),\n    addAccount: (account) => dispatch(addAccount(account)),\n    setPreviousBtn: (btn) => dispatch(setPreviousBtn(btn)),\n});\n\nconst SecondPageWithRedux = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SecondPage);\n\nexport {SecondPageWithRedux as SecondPage}","import React, {useEffect} from 'react';\nimport './App.css'\nimport {connect} from 'react-redux';\nimport {setAccounts} from './actions/index'\nimport {FirstPage} from \"./components/FirstPage\";\nimport {SecondPage} from \"./components/SecondPage\";\nimport data from './data'\nconst  App =(props) =>{\n    useEffect(() => {\n        props.setAccounts(data.accounts)\n    }, []);\n  return (\n\n    <div className=\"App\">\n        {\n            (props.pageToggle)?<SecondPage/>:<FirstPage/>\n        }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n    pageToggle: state.pageToggle\n});\n\n\nconst mapDispatchToProps = dispatch => ({\n    setAccounts: (data) => dispatch(setAccounts(data)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)","import {\n    ADD_ACCOUNT,\n    CHANGE_PAGE_TOGGLE,\n    DELETE_ACCOUNT,\n    SET_ACCOUNTS,\n    SET_PREVIOUS_BTN,\n    WRITING_ACCOUNT_TITLE\n} from '../actions/index';\n\nconst initState = {\n    pageToggle: false,\n    accounts: [],\n    accountTitle: '',\n    previousBtn: 'second-page__btn-add'\n};\n\nexport const reducer = (state = initState, {type, payload}) => {\n    switch (type) {\n        case CHANGE_PAGE_TOGGLE:\n            return {\n                ...state,\n                pageToggle: payload\n            };\n        case SET_ACCOUNTS:\n            return {\n                ...state,\n                accounts: payload\n            };\n        case DELETE_ACCOUNT:\n            return {\n                ...state,\n                accounts: [...state.accounts.filter(item => item.title !== payload)]\n            };\n        case WRITING_ACCOUNT_TITLE:\n            return {\n                ...state,\n                accountTitle: payload\n            };\n        case ADD_ACCOUNT:\n            return {\n                ...state,\n                accounts: [...state.accounts, payload]\n            };\n        case SET_PREVIOUS_BTN:\n            return {\n                ...state,\n                previousBtn: payload\n            };\n        default:\n            return state\n    }\n};","import {reducer} from \"./reducers\"\nimport {createStore, compose} from \"redux\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n    reducer,\n    composeEnhancers()\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./storeConfig\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    ,\n    document.getElementById('root'));\n"],"sourceRoot":""}